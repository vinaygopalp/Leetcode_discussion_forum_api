"""
Django settings for Leetcode project.

Generated by 'django-admin startproject' using Django 4.2.13.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv
 
load_dotenv()
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-zu@#)^$6^=8$lf52)ly)*5#!fi5niu!s#())fb=s=hrvjkw_c&'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost', '127.0.0.1',"leetcode-contest.onrender.com","go-lang-auth-service-latest.onrender.com","codeverse-latest.onrender.com","codeverse-frontend-z1ao.onrender.com","codeverse-auth-svc.onrender.com"]

from corsheaders.defaults import default_headers

CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "https://codeverse-frontend-z1ao.onrender.com", "http://localhost:3000",
    "http://127.0.0.1:3000","https://leetcode-contest.onrender.com","https://go-lang-auth-service-latest.onrender.com","https://codeverse-latest.onrender.com","https://codeverse-frontend-z1ao.onrender.com","https://codeverse-auth-svc.onrender.com"
]

CORS_ALLOW_HEADERS = list(default_headers) + [
    "access-control-allow-origin",
]

CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_ALL_ORIGINS = True

REST_FRAMEWORK = {
     
    'DEFAULT_AUTHENTICATION_CLASSES': (
         
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    )
   
}
# Application definition

INSTALLED_APPS = [
     'corsheaders',
    'rest_framework_simplejwt',
    'rest_framework',
    'message_api', 
    'authentications', 
    "daphne",
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'chat',
    'channels',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware', 
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
 
ROOT_URLCONF = 'Leetcode.urls'
ASGI_APPLICATION = "Leetcode.asgi.application"
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
              os.path.join(BASE_DIR, 'chat', 'templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Leetcode.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

  

DATABASES = {
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': BASE_DIR / 'db.sqlite3',
    # }
    
        'default':{
        # 'ENGINE': os.getenv('ENGINE'),
        # 'NAME': os.getenv('NAME'),
        # 'USER': os.getenv('USER'),
        # 'PASSWORD': os.getenv('PASSWORD'),
        # 'HOST': os.getenv('discussion_HOST'),       
        # 'PORT': os.getenv('db_PORT'),

        'ENGINE': os.getenv('ENGINE'),
        'NAME': os.getenv('NAME'),
        'USER': os.getenv('DB_USER'),
        'PASSWORD': os.getenv('DB_PASSWORD'),
        'HOST': os.getenv('DB_HOST'),       
        'PORT': os.getenv('DB_PORT'),
    }
   
}
        # 'ENGINE': 'postgresql://postgres:[YOUR-PASSWORD]@db.emadhrxdakgsydwvtxpf.supabase.co:5432/postgres  ',
        # 'NAME': 'api',
        # 'USER': 'postgres',
        # 'PASSWORD': 'vinay@2003',
        # 'HOST': 'localhost',    
        # 'PORT': '5435',
    


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": os.getenv("REDIS_URL", "redis://127.0.0.1:6379/1"),
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        },
    }
}

import redis

# r = redis.Redis(
#     host='redis-18638.c8.us-east-1-4.ec2.redns.redis-cloud.com',
#     port=18638,
#     decode_responses=True,
#     username="default",
#     password="*******",
# )
 
CHANNEL_LAYERS = {
    # "default": {
    #     "BACKEND": "channels_redis.core.RedisChannelLayer",
    #     "CONFIG": {
    #         "hosts": [("127.0.0.1", 6379)],
    #     },
    # },
 
    "default": {
       
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [
                    str(os.getenv("redis"))
            ],
        },
    },
}

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
